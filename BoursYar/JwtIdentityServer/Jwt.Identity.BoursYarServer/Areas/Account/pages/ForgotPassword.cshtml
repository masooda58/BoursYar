@page
@using Jwt.Identity.BoursYarServer.Resources
@using Jwt.Identity.BoursYarServer.Models.ViewModel
@using Jwt.Identity.Domain.Models
@using TypeCode = Jwt.Identity.Domain.Models.TypeCode.TotpTypeCode
@model ForgotPasswordModel
@{
    ViewData["Title"] = "Forgot your password?";
    bool showResetEmailMessage = (bool)(TempData[TempDataDict.ShowResetEmailMessage] ?? false);


}

<h1>@ViewData["Title"]</h1>
<h4>Enter your email.</h4>
 
<hr />
<div class="row">
    <div class="col-md-4">
        <form method="post">
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="Input.EmailOrPhone"></label>
                <input asp-for="Input.EmailOrPhone" class="form-control" />
                <span asp-validation-for="Input.EmailOrPhone" class="text-danger"></span>
            </div>
            <button id="Submit" type="submit" class="btn btn-primary">Submit</button>
        </form>
    </div>
</div>
@if (showResetEmailMessage)
{
<p>   ایمیل  فراموشی رمز به آدرس {@Model.Input.EmailOrPhone} ارسال گردید</p>
}
@if (TempData.ContainsKey(TempDataDict.Error_TotpCode))
{
    <div hidden id="timerLabel" class="alert">@TempData[TempDataDict.Error_TotpCode]</div>
    <span id="left"></span>
}
@section Scripts {
    <partial name="_ValidationScriptsPartial"/>
    <script>
     
       
        $(document).ready(function () {
            let current = parseInt(document.getElementById("timerLabel").innerHTML);
            const countdown = function() {
                document.getElementById("left").innerHTML = --current || "Done"; // using current when 0 it is false
     
                if (current <= 0) {
                    clearTimeout(tId); // stop the interval
                }
            };
            const tId = setInterval(countdown, 1000);
        });
    </script>
}
